// Code generated by protoc-gen-go.
// source: logs.proto
// DO NOT EDIT!

/*
Package logs is a generated protocol buffer package.

It is generated from these files:
	logs.proto

It has these top-level messages:
	LogEntry
	GetRequest
	GetReply
*/
package logs

import "github.com/golang/protobuf/proto"
import "fmt"
import "math"

import (
	"golang.org/x/net/context"
	"google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type LogEntry struct {
	Timestamp   string `protobuf:"bytes,1,opt,name=timestamp" json:"timestamp,omitempty"`
	TimeId      string `protobuf:"bytes,2,opt,name=time_id,json=timeId" json:"time_id,omitempty"`
	ServiceId   string `protobuf:"bytes,3,opt,name=service_id,json=serviceId" json:"service_id,omitempty"`
	ServiceName string `protobuf:"bytes,4,opt,name=service_name,json=serviceName" json:"service_name,omitempty"`
	Message     string `protobuf:"bytes,5,opt,name=message" json:"message,omitempty"`
	ContainerId string `protobuf:"bytes,6,opt,name=container_id,json=containerId" json:"container_id,omitempty"`
	NodeId      string `protobuf:"bytes,7,opt,name=node_id,json=nodeId" json:"node_id,omitempty"`
}

func (m *LogEntry) Reset()                    { *m = LogEntry{} }
func (m *LogEntry) String() string            { return proto.CompactTextString(m) }
func (*LogEntry) ProtoMessage()               {}
func (*LogEntry) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type GetRequest struct {
	Timestamp   string `protobuf:"bytes,1,opt,name=timestamp" json:"timestamp,omitempty"`
	ServiceId   string `protobuf:"bytes,2,opt,name=service_id,json=serviceId" json:"service_id,omitempty"`
	ServiceName string `protobuf:"bytes,3,opt,name=service_name,json=serviceName" json:"service_name,omitempty"`
	Message     string `protobuf:"bytes,4,opt,name=message" json:"message,omitempty"`
	ContainerId string `protobuf:"bytes,5,opt,name=container_id,json=containerId" json:"container_id,omitempty"`
	NodeId      string `protobuf:"bytes,6,opt,name=node_id,json=nodeId" json:"node_id,omitempty"`
	From        string `protobuf:"bytes,7,opt,name=from" json:"from,omitempty"`
	Size        string `protobuf:"bytes,8,opt,name=size" json:"size,omitempty"`
}

func (m *GetRequest) Reset()                    { *m = GetRequest{} }
func (m *GetRequest) String() string            { return proto.CompactTextString(m) }
func (*GetRequest) ProtoMessage()               {}
func (*GetRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type GetReply struct {
	Entries []*LogEntry `protobuf:"bytes,1,rep,name=entries" json:"entries,omitempty"`
}

func (m *GetReply) Reset()                    { *m = GetReply{} }
func (m *GetReply) String() string            { return proto.CompactTextString(m) }
func (*GetReply) ProtoMessage()               {}
func (*GetReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *GetReply) GetEntries() []*LogEntry {
	if m != nil {
		return m.Entries
	}
	return nil
}

func init() {
	proto.RegisterType((*LogEntry)(nil), "logs.LogEntry")
	proto.RegisterType((*GetRequest)(nil), "logs.GetRequest")
	proto.RegisterType((*GetReply)(nil), "logs.GetReply")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion3

// Client API for Logs service

type LogsClient interface {
	Get(ctx context.Context, in *GetRequest, opts ...grpc.CallOption) (*GetReply, error)
}

type logsClient struct {
	cc *grpc.ClientConn
}

func NewLogsClient(cc *grpc.ClientConn) LogsClient {
	return &logsClient{cc}
}

func (c *logsClient) Get(ctx context.Context, in *GetRequest, opts ...grpc.CallOption) (*GetReply, error) {
	out := new(GetReply)
	err := grpc.Invoke(ctx, "/logs.Logs/Get", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Logs service

type LogsServer interface {
	Get(context.Context, *GetRequest) (*GetReply, error)
}

func RegisterLogsServer(s *grpc.Server, srv LogsServer) {
	s.RegisterService(&_Logs_serviceDesc, srv)
}

func _Logs_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LogsServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/logs.Logs/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LogsServer).Get(ctx, req.(*GetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Logs_serviceDesc = grpc.ServiceDesc{
	ServiceName: "logs.Logs",
	HandlerType: (*LogsServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Get",
			Handler:    _Logs_Get_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: fileDescriptor0,
}

func init() { proto.RegisterFile("logs.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 301 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x84, 0x92, 0xc1, 0x4e, 0x83, 0x40,
	0x10, 0x86, 0xa5, 0x50, 0x68, 0xa7, 0xa6, 0x31, 0x7b, 0x71, 0x63, 0x34, 0xa9, 0x9c, 0xf0, 0xd2,
	0xc4, 0xea, 0x2b, 0x98, 0x86, 0xa4, 0xf1, 0xc0, 0x0b, 0x18, 0xec, 0x8e, 0x64, 0x13, 0x76, 0x17,
	0x77, 0x57, 0x13, 0x7c, 0x53, 0x5f, 0xc1, 0xa7, 0x30, 0xbb, 0x80, 0xad, 0x17, 0x7a, 0x9b, 0xff,
	0xff, 0x67, 0x60, 0x3e, 0x06, 0x80, 0x5a, 0x55, 0x66, 0xdd, 0x68, 0x65, 0x15, 0x89, 0x5c, 0x9d,
	0x7e, 0x07, 0x30, 0xdb, 0xa9, 0xea, 0x49, 0x5a, 0xdd, 0x92, 0x6b, 0x98, 0x5b, 0x2e, 0xd0, 0xd8,
	0x52, 0x34, 0x34, 0x58, 0x05, 0xd9, 0xbc, 0x38, 0x18, 0xe4, 0x12, 0x12, 0x27, 0x5e, 0x38, 0xa3,
	0x13, 0x9f, 0xc5, 0x4e, 0xe6, 0x8c, 0xdc, 0x00, 0x18, 0xd4, 0x9f, 0x7c, 0xef, 0xb3, 0xb0, 0x9b,
	0xeb, 0x9d, 0x9c, 0x91, 0x5b, 0x38, 0x1f, 0x62, 0x59, 0x0a, 0xa4, 0x91, 0x6f, 0x58, 0xf4, 0xde,
	0x73, 0x29, 0x90, 0x50, 0x48, 0x04, 0x1a, 0x53, 0x56, 0x48, 0xa7, 0x3e, 0x1d, 0xa4, 0x1b, 0xde,
	0x2b, 0x69, 0x4b, 0x2e, 0x51, 0xbb, 0xa7, 0xc7, 0xdd, 0xf0, 0x9f, 0x97, 0x33, 0xb7, 0x97, 0x54,
	0xcc, 0xbf, 0x3b, 0xe9, 0xf6, 0x72, 0x32, 0x67, 0xe9, 0x4f, 0x00, 0xb0, 0x45, 0x5b, 0xe0, 0xfb,
	0x07, 0x1a, 0x7b, 0x82, 0xee, 0x3f, 0xc4, 0xe4, 0x14, 0x44, 0x38, 0x0a, 0x11, 0x8d, 0x43, 0x4c,
	0x47, 0x21, 0xe2, 0x63, 0x08, 0x42, 0x20, 0x7a, 0xd3, 0x4a, 0xf4, 0x68, 0xbe, 0x76, 0x9e, 0xe1,
	0x5f, 0x48, 0x67, 0x9d, 0xe7, 0xea, 0xf4, 0x11, 0x66, 0x9e, 0xb5, 0xa9, 0x5b, 0x92, 0x41, 0x82,
	0xd2, 0x6a, 0x8e, 0x86, 0x06, 0xab, 0x30, 0x5b, 0x6c, 0x96, 0x6b, 0x7f, 0xf8, 0xe1, 0xd0, 0xc5,
	0x10, 0x6f, 0xee, 0x21, 0xda, 0xa9, 0xca, 0x90, 0x3b, 0x08, 0xb7, 0x68, 0xc9, 0x45, 0xd7, 0x77,
	0xf8, 0x68, 0x57, 0xcb, 0x23, 0xa7, 0xa9, 0xdb, 0xf4, 0xec, 0x35, 0xf6, 0xbf, 0xcf, 0xc3, 0x6f,
	0x00, 0x00, 0x00, 0xff, 0xff, 0x11, 0xbe, 0x0f, 0xee, 0x4c, 0x02, 0x00, 0x00,
}
